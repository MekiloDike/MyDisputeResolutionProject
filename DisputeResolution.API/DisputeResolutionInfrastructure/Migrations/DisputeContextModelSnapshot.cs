// <auto-generated />
using System;
using DisputeResolutionInfrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisputeResolutionInfrastructure.Migrations
{
    [DbContext(typeof(DisputeContext))]
    partial class DisputeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Additionalinfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CardAcceptorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardAcceptorLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DisputeResponseLogId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasMerchant")
                        .HasColumnType("bit");

                    b.Property<string>("MerchantType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetrievalReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Settled")
                        .HasColumnType("bit");

                    b.Property<string>("SinkNodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceNodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DisputeResponseLogId")
                        .IsUnique();

                    b.ToTable("Additionalinfo");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.DisputeResponseLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("accountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acquirer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acquirerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disputeAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disputeAmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("domainCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("issuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("issuerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("merchantDisputant")
                        .HasColumnType("bit");

                    b.Property<string>("pan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reasonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("settlementAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("settlementCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("statusStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("surchargeAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terminalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transactionLogReferenceProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionStore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisputeResponseLogs");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.DisputeResquestLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDisputeCreated")
                        .HasColumnType("bit");

                    b.Property<string>("MaskCardPan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetrivalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionLogRefernce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisputeRequestLogs");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Evidence", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("DisputeResponseLogId")
                        .HasColumnType("bigint");

                    b.Property<string>("base64EncodedBinary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("disputeId")
                        .HasColumnType("bigint");

                    b.Property<string>("mimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uuId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DisputeResponseLogId");

                    b.ToTable("Evidence");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Journal", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("DisputeResponseLogId")
                        .HasColumnType("bigint");

                    b.Property<string>("addedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("addedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("disputeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("DisputeResponseLogId");

                    b.ToTable("Journal");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Additionalinfo", b =>
                {
                    b.HasOne("DisputeResolutionInfrastructure.Entity.DisputeResponseLog", "DisputeResponseLog")
                        .WithOne("Additionalinfo")
                        .HasForeignKey("DisputeResolutionInfrastructure.Entity.Additionalinfo", "DisputeResponseLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisputeResponseLog");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Evidence", b =>
                {
                    b.HasOne("DisputeResolutionInfrastructure.Entity.DisputeResponseLog", "DisputeResponseLog")
                        .WithMany("evidence")
                        .HasForeignKey("DisputeResponseLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisputeResponseLog");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.Journal", b =>
                {
                    b.HasOne("DisputeResolutionInfrastructure.Entity.DisputeResponseLog", "DisputeResponseLog")
                        .WithMany("journal")
                        .HasForeignKey("DisputeResponseLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisputeResponseLog");
                });

            modelBuilder.Entity("DisputeResolutionInfrastructure.Entity.DisputeResponseLog", b =>
                {
                    b.Navigation("Additionalinfo");

                    b.Navigation("evidence");

                    b.Navigation("journal");
                });
#pragma warning restore 612, 618
        }
    }
}
